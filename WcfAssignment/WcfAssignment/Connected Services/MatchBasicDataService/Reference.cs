//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfAssignment.MatchBasicDataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Frequency", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    [System.SerializableAttribute()]
    public partial class Frequency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParameterObject", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchBasic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchBasicData))]
    public partial class ParameterObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecretKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecretKey {
            get {
                return this.SecretKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SecretKeyField, value) != true)) {
                    this.SecretKeyField = value;
                    this.RaisePropertyChanged("SecretKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionUserName {
            get {
                return this.SessionUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionUserNameField, value) != true)) {
                    this.SessionUserNameField = value;
                    this.RaisePropertyChanged("SessionUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchBasic", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    [System.SerializableAttribute()]
    public partial class MatchBasic : WcfAssignment.MatchBasicDataService.ParameterObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CacheIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MaxRunDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimaryBatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequireApprovalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CacheId {
            get {
                return this.CacheIdField;
            }
            set {
                if ((this.CacheIdField.Equals(value) != true)) {
                    this.CacheIdField = value;
                    this.RaisePropertyChanged("CacheId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MaxRunDate {
            get {
                return this.MaxRunDateField;
            }
            set {
                if ((this.MaxRunDateField.Equals(value) != true)) {
                    this.MaxRunDateField = value;
                    this.RaisePropertyChanged("MaxRunDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimaryBatchId {
            get {
                return this.PrimaryBatchIdField;
            }
            set {
                if ((this.PrimaryBatchIdField.Equals(value) != true)) {
                    this.PrimaryBatchIdField = value;
                    this.RaisePropertyChanged("PrimaryBatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequireApproval {
            get {
                return this.RequireApprovalField;
            }
            set {
                if ((this.RequireApprovalField.Equals(value) != true)) {
                    this.RequireApprovalField = value;
                    this.RaisePropertyChanged("RequireApproval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((this.SourceIdField.Equals(value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchBasicData", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    [System.SerializableAttribute()]
    public partial class MatchBasicData : WcfAssignment.MatchBasicDataService.ParameterObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AccessGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalyseDataTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategorySortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DiffPrecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DiffsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsAccountReconciliationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsSingleSourceMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastRunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastRunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastRunMatchboardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastRunNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.Layout LayoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MatchDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatchStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatchingItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoreInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenRowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimaryBatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequireApprovalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondaryBatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShowAutoCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShowErrorsOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> SourceParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.SourceStatus SourceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.MatchType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] AccessGroups {
            get {
                return this.AccessGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessGroupsField, value) != true)) {
                    this.AccessGroupsField = value;
                    this.RaisePropertyChanged("AccessGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalyseDataTypes {
            get {
                return this.AnalyseDataTypesField;
            }
            set {
                if ((this.AnalyseDataTypesField.Equals(value) != true)) {
                    this.AnalyseDataTypesField = value;
                    this.RaisePropertyChanged("AnalyseDataTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategorySortOrder {
            get {
                return this.CategorySortOrderField;
            }
            set {
                if ((this.CategorySortOrderField.Equals(value) != true)) {
                    this.CategorySortOrderField = value;
                    this.RaisePropertyChanged("CategorySortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentStatus {
            get {
                return this.CurrentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentStatusField, value) != true)) {
                    this.CurrentStatusField = value;
                    this.RaisePropertyChanged("CurrentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiffPrecision {
            get {
                return this.DiffPrecisionField;
            }
            set {
                if ((this.DiffPrecisionField.Equals(value) != true)) {
                    this.DiffPrecisionField = value;
                    this.RaisePropertyChanged("DiffPrecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Diffs {
            get {
                return this.DiffsField;
            }
            set {
                if ((this.DiffsField.Equals(value) != true)) {
                    this.DiffsField = value;
                    this.RaisePropertyChanged("Diffs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrequencyName {
            get {
                return this.FrequencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyNameField, value) != true)) {
                    this.FrequencyNameField = value;
                    this.RaisePropertyChanged("FrequencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsAccountReconciliation {
            get {
                return this.IsAccountReconciliationField;
            }
            set {
                if ((this.IsAccountReconciliationField.Equals(value) != true)) {
                    this.IsAccountReconciliationField = value;
                    this.RaisePropertyChanged("IsAccountReconciliation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsSingleSourceMatch {
            get {
                return this.IsSingleSourceMatchField;
            }
            set {
                if ((this.IsSingleSourceMatchField.Equals(value) != true)) {
                    this.IsSingleSourceMatchField = value;
                    this.RaisePropertyChanged("IsSingleSourceMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastRun {
            get {
                return this.LastRunField;
            }
            set {
                if ((this.LastRunField.Equals(value) != true)) {
                    this.LastRunField = value;
                    this.RaisePropertyChanged("LastRun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastRunId {
            get {
                return this.LastRunIdField;
            }
            set {
                if ((this.LastRunIdField.Equals(value) != true)) {
                    this.LastRunIdField = value;
                    this.RaisePropertyChanged("LastRunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastRunMatchboard {
            get {
                return this.LastRunMatchboardField;
            }
            set {
                if ((object.ReferenceEquals(this.LastRunMatchboardField, value) != true)) {
                    this.LastRunMatchboardField = value;
                    this.RaisePropertyChanged("LastRunMatchboard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastRunNote {
            get {
                return this.LastRunNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.LastRunNoteField, value) != true)) {
                    this.LastRunNoteField = value;
                    this.RaisePropertyChanged("LastRunNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.Layout Layout {
            get {
                return this.LayoutField;
            }
            set {
                if ((this.LayoutField.Equals(value) != true)) {
                    this.LayoutField = value;
                    this.RaisePropertyChanged("Layout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MatchDate {
            get {
                return this.MatchDateField;
            }
            set {
                if ((this.MatchDateField.Equals(value) != true)) {
                    this.MatchDateField = value;
                    this.RaisePropertyChanged("MatchDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchStatus {
            get {
                return this.MatchStatusField;
            }
            set {
                if ((this.MatchStatusField.Equals(value) != true)) {
                    this.MatchStatusField = value;
                    this.RaisePropertyChanged("MatchStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchingItems {
            get {
                return this.MatchingItemsField;
            }
            set {
                if ((this.MatchingItemsField.Equals(value) != true)) {
                    this.MatchingItemsField = value;
                    this.RaisePropertyChanged("MatchingItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoreInfo {
            get {
                return this.MoreInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MoreInfoField, value) != true)) {
                    this.MoreInfoField = value;
                    this.RaisePropertyChanged("MoreInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenRowCount {
            get {
                return this.OpenRowCountField;
            }
            set {
                if ((this.OpenRowCountField.Equals(value) != true)) {
                    this.OpenRowCountField = value;
                    this.RaisePropertyChanged("OpenRowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimaryBatchId {
            get {
                return this.PrimaryBatchIdField;
            }
            set {
                if ((this.PrimaryBatchIdField.Equals(value) != true)) {
                    this.PrimaryBatchIdField = value;
                    this.RaisePropertyChanged("PrimaryBatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequireApproval {
            get {
                return this.RequireApprovalField;
            }
            set {
                if ((this.RequireApprovalField.Equals(value) != true)) {
                    this.RequireApprovalField = value;
                    this.RaisePropertyChanged("RequireApproval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondaryBatchId {
            get {
                return this.SecondaryBatchIdField;
            }
            set {
                if ((this.SecondaryBatchIdField.Equals(value) != true)) {
                    this.SecondaryBatchIdField = value;
                    this.RaisePropertyChanged("SecondaryBatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowAutoComments {
            get {
                return this.ShowAutoCommentsField;
            }
            set {
                if ((this.ShowAutoCommentsField.Equals(value) != true)) {
                    this.ShowAutoCommentsField = value;
                    this.RaisePropertyChanged("ShowAutoComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowErrorsOnly {
            get {
                return this.ShowErrorsOnlyField;
            }
            set {
                if ((this.ShowErrorsOnlyField.Equals(value) != true)) {
                    this.ShowErrorsOnlyField = value;
                    this.RaisePropertyChanged("ShowErrorsOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortPriority {
            get {
                return this.SortPriorityField;
            }
            set {
                if ((this.SortPriorityField.Equals(value) != true)) {
                    this.SortPriorityField = value;
                    this.RaisePropertyChanged("SortPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> SourceParameters {
            get {
                return this.SourceParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceParametersField, value) != true)) {
                    this.SourceParametersField = value;
                    this.RaisePropertyChanged("SourceParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.SourceStatus SourceStatus {
            get {
                return this.SourceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceStatusField, value) != true)) {
                    this.SourceStatusField = value;
                    this.RaisePropertyChanged("SourceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((this.TemplateField.Equals(value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.MatchType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceStatus", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    [System.SerializableAttribute()]
    public partial class SourceStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryColor {
            get {
                return this.PrimaryColorField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryColorField, value) != true)) {
                    this.PrimaryColorField = value;
                    this.RaisePropertyChanged("PrimaryColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryText {
            get {
                return this.PrimaryTextField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryTextField, value) != true)) {
                    this.PrimaryTextField = value;
                    this.RaisePropertyChanged("PrimaryText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryColor {
            get {
                return this.SecondaryColorField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryColorField, value) != true)) {
                    this.SecondaryColorField = value;
                    this.RaisePropertyChanged("SecondaryColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryText {
            get {
                return this.SecondaryTextField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryTextField, value) != true)) {
                    this.SecondaryTextField = value;
                    this.RaisePropertyChanged("SecondaryText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Layout", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    public enum Layout : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SINGLE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MULTI = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNDEFINED = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchType", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    public enum MatchType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNDEFINED = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NUMERIC = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STRING = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DATE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MULTI = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.BL.ResultObject")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.ResultMatchBasicData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.ResultMatchBasicDataList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.ResultMatchBasic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.ResultMatchDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.ResultActivityDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.ResultIntList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.ResultStringList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.ResultMatchStatusList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.Frequency[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.Frequency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchBasicData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.ParameterObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.Layout))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.SourceStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchBasic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchBasicData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchBasic[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchHistoryDetails[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchHistoryDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.RecentActivityDetails[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.RecentActivityDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchStatus[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MatchStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WcfAssignment.MatchBasicDataService.MStatus))]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CacheIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DataSrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CacheId {
            get {
                return this.CacheIdField;
            }
            set {
                if ((this.CacheIdField.Equals(value) != true)) {
                    this.CacheIdField = value;
                    this.RaisePropertyChanged("CacheId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object DataSrc {
            get {
                return this.DataSrcField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSrcField, value) != true)) {
                    this.DataSrcField = value;
                    this.RaisePropertyChanged("DataSrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultMatchBasicData", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.BL.ResultObject")]
    [System.SerializableAttribute()]
    public partial class ResultMatchBasicData : WcfAssignment.MatchBasicDataService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.MatchBasicData ResultDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.MatchBasicData ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultMatchBasicDataList", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.BL.ResultObject")]
    [System.SerializableAttribute()]
    public partial class ResultMatchBasicDataList : WcfAssignment.MatchBasicDataService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.MatchBasicData[] ResultDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.MatchBasicData[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultMatchBasic", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.BL.ResultObject")]
    [System.SerializableAttribute()]
    public partial class ResultMatchBasic : WcfAssignment.MatchBasicDataService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.MatchBasic[] ResultDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.MatchBasic[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultMatchDetails", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.BL.ResultObject")]
    [System.SerializableAttribute()]
    public partial class ResultMatchDetails : WcfAssignment.MatchBasicDataService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.MatchHistoryDetails[] ResultDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.MatchHistoryDetails[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultActivityDetails", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.BL.ResultObject")]
    [System.SerializableAttribute()]
    public partial class ResultActivityDetails : WcfAssignment.MatchBasicDataService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.RecentActivityDetails[] ResultDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.RecentActivityDetails[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultIntList", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.BL.ResultObject")]
    [System.SerializableAttribute()]
    public partial class ResultIntList : WcfAssignment.MatchBasicDataService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ResultDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultStringList", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.BL.ResultObject")]
    [System.SerializableAttribute()]
    public partial class ResultStringList : WcfAssignment.MatchBasicDataService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultMatchStatusList", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.BL.ResultObject")]
    [System.SerializableAttribute()]
    public partial class ResultMatchStatusList : WcfAssignment.MatchBasicDataService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.MatchStatus[] ResultDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.MatchStatus[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchHistoryDetails", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    [System.SerializableAttribute()]
    public partial class MatchHistoryDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LatestRunDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxOpenAgeDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeClass1LowerLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeClass2LowerLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeClass3LowerLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalOpenItemCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrequencyName {
            get {
                return this.FrequencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyNameField, value) != true)) {
                    this.FrequencyNameField = value;
                    this.RaisePropertyChanged("FrequencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemCount {
            get {
                return this.ItemCountField;
            }
            set {
                if ((this.ItemCountField.Equals(value) != true)) {
                    this.ItemCountField = value;
                    this.RaisePropertyChanged("ItemCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LatestRunDate {
            get {
                return this.LatestRunDateField;
            }
            set {
                if ((this.LatestRunDateField.Equals(value) != true)) {
                    this.LatestRunDateField = value;
                    this.RaisePropertyChanged("LatestRunDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchName {
            get {
                return this.MatchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchNameField, value) != true)) {
                    this.MatchNameField = value;
                    this.RaisePropertyChanged("MatchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxOpenAgeDays {
            get {
                return this.MaxOpenAgeDaysField;
            }
            set {
                if ((this.MaxOpenAgeDaysField.Equals(value) != true)) {
                    this.MaxOpenAgeDaysField = value;
                    this.RaisePropertyChanged("MaxOpenAgeDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeClass {
            get {
                return this.TimeClassField;
            }
            set {
                if ((this.TimeClassField.Equals(value) != true)) {
                    this.TimeClassField = value;
                    this.RaisePropertyChanged("TimeClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeClass1LowerLimit {
            get {
                return this.TimeClass1LowerLimitField;
            }
            set {
                if ((this.TimeClass1LowerLimitField.Equals(value) != true)) {
                    this.TimeClass1LowerLimitField = value;
                    this.RaisePropertyChanged("TimeClass1LowerLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeClass2LowerLimit {
            get {
                return this.TimeClass2LowerLimitField;
            }
            set {
                if ((this.TimeClass2LowerLimitField.Equals(value) != true)) {
                    this.TimeClass2LowerLimitField = value;
                    this.RaisePropertyChanged("TimeClass2LowerLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeClass3LowerLimit {
            get {
                return this.TimeClass3LowerLimitField;
            }
            set {
                if ((this.TimeClass3LowerLimitField.Equals(value) != true)) {
                    this.TimeClass3LowerLimitField = value;
                    this.RaisePropertyChanged("TimeClass3LowerLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOpenItemCount {
            get {
                return this.TotalOpenItemCountField;
            }
            set {
                if ((this.TotalOpenItemCountField.Equals(value) != true)) {
                    this.TotalOpenItemCountField = value;
                    this.RaisePropertyChanged("TotalOpenItemCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecentActivityDetails", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    [System.SerializableAttribute()]
    public partial class RecentActivityDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HypeLinkVisibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((this.EntryDateField.Equals(value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HypeLinkVisibility {
            get {
                return this.HypeLinkVisibilityField;
            }
            set {
                if ((this.HypeLinkVisibilityField.Equals(value) != true)) {
                    this.HypeLinkVisibilityField = value;
                    this.RaisePropertyChanged("HypeLinkVisibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchName {
            get {
                return this.MatchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchNameField, value) != true)) {
                    this.MatchNameField = value;
                    this.RaisePropertyChanged("MatchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowId {
            get {
                return this.RowIdField;
            }
            set {
                if ((this.RowIdField.Equals(value) != true)) {
                    this.RowIdField = value;
                    this.RaisePropertyChanged("RowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RunId {
            get {
                return this.RunIdField;
            }
            set {
                if ((this.RunIdField.Equals(value) != true)) {
                    this.RunIdField = value;
                    this.RaisePropertyChanged("RunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchStatus", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    [System.SerializableAttribute()]
    public partial class MatchStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.MatchBasicData BasicDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenRowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RunDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SourceNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfAssignment.MatchBasicDataService.MStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.MatchBasicData BasicData {
            get {
                return this.BasicDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BasicDataField, value) != true)) {
                    this.BasicDataField = value;
                    this.RaisePropertyChanged("BasicData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((this.EntryDateField.Equals(value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryUser {
            get {
                return this.EntryUserField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryUserField, value) != true)) {
                    this.EntryUserField = value;
                    this.RaisePropertyChanged("EntryUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenRowCount {
            get {
                return this.OpenRowCountField;
            }
            set {
                if ((this.OpenRowCountField.Equals(value) != true)) {
                    this.OpenRowCountField = value;
                    this.RaisePropertyChanged("OpenRowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RunDate {
            get {
                return this.RunDateField;
            }
            set {
                if ((this.RunDateField.Equals(value) != true)) {
                    this.RunDateField = value;
                    this.RaisePropertyChanged("RunDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RunId {
            get {
                return this.RunIdField;
            }
            set {
                if ((this.RunIdField.Equals(value) != true)) {
                    this.RunIdField = value;
                    this.RaisePropertyChanged("RunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowParameters {
            get {
                return this.ShowParametersField;
            }
            set {
                if ((this.ShowParametersField.Equals(value) != true)) {
                    this.ShowParametersField = value;
                    this.RaisePropertyChanged("ShowParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SourceNames {
            get {
                return this.SourceNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceNamesField, value) != true)) {
                    this.SourceNamesField = value;
                    this.RaisePropertyChanged("SourceNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfAssignment.MatchBasicDataService.MStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MStatus", Namespace="http://schemas.datacontract.org/2004/07/WiseMatch.Web.Common.DataObjects")]
    public enum MStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPEN = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CLOSED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPROVED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAILED = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MatchBasicDataService.IMatchBasicDataService")]
    public interface IMatchBasicDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectionTest/TestConnection", ReplyAction="http://tempuri.org/IConnectionTest/TestConnectionResponse")]
        void TestConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectionTest/TestConnection", ReplyAction="http://tempuri.org/IConnectionTest/TestConnectionResponse")]
        System.Threading.Tasks.Task TestConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectionTest/TestConnection2", ReplyAction="http://tempuri.org/IConnectionTest/TestConnection2Response")]
        void TestConnection2(string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectionTest/TestConnection2", ReplyAction="http://tempuri.org/IConnectionTest/TestConnection2Response")]
        System.Threading.Tasks.Task TestConnection2Async(string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetFrequencyCollection", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetFrequencyCollectionResponse")]
        WcfAssignment.MatchBasicDataService.Frequency[] GetFrequencyCollection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetFrequencyCollection", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetFrequencyCollectionResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Frequency[]> GetFrequencyCollectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/SaveMatch", ReplyAction="http://tempuri.org/IMatchBasicDataService/SaveMatchResponse")]
        WcfAssignment.MatchBasicDataService.Result SaveMatch(WcfAssignment.MatchBasicDataService.MatchBasicData mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/SaveMatch", ReplyAction="http://tempuri.org/IMatchBasicDataService/SaveMatchResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> SaveMatchAsync(WcfAssignment.MatchBasicDataService.MatchBasicData mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetLatestMatchBasicData", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetLatestMatchBasicDataResponse")]
        WcfAssignment.MatchBasicDataService.ResultMatchBasicData GetLatestMatchBasicData(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetLatestMatchBasicData", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetLatestMatchBasicDataResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasicData> GetLatestMatchBasicDataAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetMatchList", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetMatchListResponse")]
        WcfAssignment.MatchBasicDataService.ResultMatchBasicDataList GetMatchList(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetMatchList", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetMatchListResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasicDataList> GetMatchListAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetBasicDataForAllMatchList", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetBasicDataForAllMatchListResponse")]
        WcfAssignment.MatchBasicDataService.ResultMatchBasic GetBasicDataForAllMatchList(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetBasicDataForAllMatchList", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetBasicDataForAllMatchListResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasic> GetBasicDataForAllMatchListAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetInactiveMatchList", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetInactiveMatchListResponse")]
        WcfAssignment.MatchBasicDataService.ResultMatchBasic GetInactiveMatchList(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetInactiveMatchList", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetInactiveMatchListResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasic> GetInactiveMatchListAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/SaveMatchDate", ReplyAction="http://tempuri.org/IMatchBasicDataService/SaveMatchDateResponse")]
        WcfAssignment.MatchBasicDataService.Result SaveMatchDate(WcfAssignment.MatchBasicDataService.MatchBasicData match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/SaveMatchDate", ReplyAction="http://tempuri.org/IMatchBasicDataService/SaveMatchDateResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> SaveMatchDateAsync(WcfAssignment.MatchBasicDataService.MatchBasicData match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetMatchHistoryDetails", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetMatchHistoryDetailsResponse")]
        WcfAssignment.MatchBasicDataService.ResultMatchDetails GetMatchHistoryDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetMatchHistoryDetails", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetMatchHistoryDetailsResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchDetails> GetMatchHistoryDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetRecectActvityDetails", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetRecectActvityDetailsResponse")]
        WcfAssignment.MatchBasicDataService.ResultActivityDetails GetRecectActvityDetails(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetRecectActvityDetails", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetRecectActvityDetailsResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultActivityDetails> GetRecectActvityDetailsAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetOpenItems", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetOpenItemsResponse")]
        WcfAssignment.MatchBasicDataService.ResultIntList GetOpenItems(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetOpenItems", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetOpenItemsResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultIntList> GetOpenItemsAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/FetchCategoryList", ReplyAction="http://tempuri.org/IMatchBasicDataService/FetchCategoryListResponse")]
        WcfAssignment.MatchBasicDataService.ResultStringList FetchCategoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/FetchCategoryList", ReplyAction="http://tempuri.org/IMatchBasicDataService/FetchCategoryListResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultStringList> FetchCategoryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/SaveCategory", ReplyAction="http://tempuri.org/IMatchBasicDataService/SaveCategoryResponse")]
        WcfAssignment.MatchBasicDataService.Result SaveCategory(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/SaveCategory", ReplyAction="http://tempuri.org/IMatchBasicDataService/SaveCategoryResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> SaveCategoryAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetMoreMatches", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetMoreMatchesResponse")]
        WcfAssignment.MatchBasicDataService.ResultMatchBasicDataList GetMoreMatches(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetMoreMatches", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetMoreMatchesResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasicDataList> GetMoreMatchesAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/DeleteMatch", ReplyAction="http://tempuri.org/IMatchBasicDataService/DeleteMatchResponse")]
        WcfAssignment.MatchBasicDataService.Result DeleteMatch(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/DeleteMatch", ReplyAction="http://tempuri.org/IMatchBasicDataService/DeleteMatchResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> DeleteMatchAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/ActivateMatch", ReplyAction="http://tempuri.org/IMatchBasicDataService/ActivateMatchResponse")]
        WcfAssignment.MatchBasicDataService.Result ActivateMatch(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/ActivateMatch", ReplyAction="http://tempuri.org/IMatchBasicDataService/ActivateMatchResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> ActivateMatchAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/VerifyMatch", ReplyAction="http://tempuri.org/IMatchBasicDataService/VerifyMatchResponse")]
        WcfAssignment.MatchBasicDataService.Result VerifyMatch(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/VerifyMatch", ReplyAction="http://tempuri.org/IMatchBasicDataService/VerifyMatchResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> VerifyMatchAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetAllClosedMatches", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetAllClosedMatchesResponse")]
        WcfAssignment.MatchBasicDataService.ResultMatchStatusList GetAllClosedMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetAllClosedMatches", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetAllClosedMatchesResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchStatusList> GetAllClosedMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetExceptionHistory", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetExceptionHistoryResponse")]
        WcfAssignment.MatchBasicDataService.ResultMatchStatusList GetExceptionHistory(int matchId, int batchId, int rowId, int runId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/GetExceptionHistory", ReplyAction="http://tempuri.org/IMatchBasicDataService/GetExceptionHistoryResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchStatusList> GetExceptionHistoryAsync(int matchId, int batchId, int rowId, int runId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/UpdateCategorySortOrder", ReplyAction="http://tempuri.org/IMatchBasicDataService/UpdateCategorySortOrderResponse")]
        WcfAssignment.MatchBasicDataService.Result UpdateCategorySortOrder(string[] categories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchBasicDataService/UpdateCategorySortOrder", ReplyAction="http://tempuri.org/IMatchBasicDataService/UpdateCategorySortOrderResponse")]
        System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> UpdateCategorySortOrderAsync(string[] categories);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchBasicDataServiceChannel : WcfAssignment.MatchBasicDataService.IMatchBasicDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchBasicDataServiceClient : System.ServiceModel.ClientBase<WcfAssignment.MatchBasicDataService.IMatchBasicDataService>, WcfAssignment.MatchBasicDataService.IMatchBasicDataService {
        
        public MatchBasicDataServiceClient() {
        }
        
        public MatchBasicDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MatchBasicDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchBasicDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchBasicDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void TestConnection() {
            base.Channel.TestConnection();
        }
        
        public System.Threading.Tasks.Task TestConnectionAsync() {
            return base.Channel.TestConnectionAsync();
        }
        
        public void TestConnection2(string uri) {
            base.Channel.TestConnection2(uri);
        }
        
        public System.Threading.Tasks.Task TestConnection2Async(string uri) {
            return base.Channel.TestConnection2Async(uri);
        }
        
        public WcfAssignment.MatchBasicDataService.Frequency[] GetFrequencyCollection() {
            return base.Channel.GetFrequencyCollection();
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Frequency[]> GetFrequencyCollectionAsync() {
            return base.Channel.GetFrequencyCollectionAsync();
        }
        
        public WcfAssignment.MatchBasicDataService.Result SaveMatch(WcfAssignment.MatchBasicDataService.MatchBasicData mb) {
            return base.Channel.SaveMatch(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> SaveMatchAsync(WcfAssignment.MatchBasicDataService.MatchBasicData mb) {
            return base.Channel.SaveMatchAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.ResultMatchBasicData GetLatestMatchBasicData(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetLatestMatchBasicData(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasicData> GetLatestMatchBasicDataAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetLatestMatchBasicDataAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.ResultMatchBasicDataList GetMatchList(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetMatchList(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasicDataList> GetMatchListAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetMatchListAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.ResultMatchBasic GetBasicDataForAllMatchList(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetBasicDataForAllMatchList(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasic> GetBasicDataForAllMatchListAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetBasicDataForAllMatchListAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.ResultMatchBasic GetInactiveMatchList(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetInactiveMatchList(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasic> GetInactiveMatchListAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetInactiveMatchListAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.Result SaveMatchDate(WcfAssignment.MatchBasicDataService.MatchBasicData match) {
            return base.Channel.SaveMatchDate(match);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> SaveMatchDateAsync(WcfAssignment.MatchBasicDataService.MatchBasicData match) {
            return base.Channel.SaveMatchDateAsync(match);
        }
        
        public WcfAssignment.MatchBasicDataService.ResultMatchDetails GetMatchHistoryDetails() {
            return base.Channel.GetMatchHistoryDetails();
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchDetails> GetMatchHistoryDetailsAsync() {
            return base.Channel.GetMatchHistoryDetailsAsync();
        }
        
        public WcfAssignment.MatchBasicDataService.ResultActivityDetails GetRecectActvityDetails(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetRecectActvityDetails(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultActivityDetails> GetRecectActvityDetailsAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetRecectActvityDetailsAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.ResultIntList GetOpenItems(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetOpenItems(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultIntList> GetOpenItemsAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetOpenItemsAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.ResultStringList FetchCategoryList() {
            return base.Channel.FetchCategoryList();
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultStringList> FetchCategoryListAsync() {
            return base.Channel.FetchCategoryListAsync();
        }
        
        public WcfAssignment.MatchBasicDataService.Result SaveCategory(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.SaveCategory(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> SaveCategoryAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.SaveCategoryAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.ResultMatchBasicDataList GetMoreMatches(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetMoreMatches(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchBasicDataList> GetMoreMatchesAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.GetMoreMatchesAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.Result DeleteMatch(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.DeleteMatch(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> DeleteMatchAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.DeleteMatchAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.Result ActivateMatch(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.ActivateMatch(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> ActivateMatchAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.ActivateMatchAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.Result VerifyMatch(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.VerifyMatch(mb);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> VerifyMatchAsync(WcfAssignment.MatchBasicDataService.MatchBasic mb) {
            return base.Channel.VerifyMatchAsync(mb);
        }
        
        public WcfAssignment.MatchBasicDataService.ResultMatchStatusList GetAllClosedMatches() {
            return base.Channel.GetAllClosedMatches();
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchStatusList> GetAllClosedMatchesAsync() {
            return base.Channel.GetAllClosedMatchesAsync();
        }
        
        public WcfAssignment.MatchBasicDataService.ResultMatchStatusList GetExceptionHistory(int matchId, int batchId, int rowId, int runId) {
            return base.Channel.GetExceptionHistory(matchId, batchId, rowId, runId);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.ResultMatchStatusList> GetExceptionHistoryAsync(int matchId, int batchId, int rowId, int runId) {
            return base.Channel.GetExceptionHistoryAsync(matchId, batchId, rowId, runId);
        }
        
        public WcfAssignment.MatchBasicDataService.Result UpdateCategorySortOrder(string[] categories) {
            return base.Channel.UpdateCategorySortOrder(categories);
        }
        
        public System.Threading.Tasks.Task<WcfAssignment.MatchBasicDataService.Result> UpdateCategorySortOrderAsync(string[] categories) {
            return base.Channel.UpdateCategorySortOrderAsync(categories);
        }
    }
}
